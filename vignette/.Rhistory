mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$year, {
output$plot2 <- renderPlot({
land_vis(recortes(), as.numeric(input$year))
})
}) # end observeEvent
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("year", "View Reference Year", list(1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
2021)),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$year, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$year))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("year", "View Reference Year", choices = 1985:2021),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observe({
updateSelectInput(session, "year", "View Reference Year", choices = as.numeric(input$start):2021)
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$year, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$year))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("year", "View Reference Year", choices = seq(1985, 2021, by = 1)),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observe({
updateSelectInput(session, "year", "View Reference Year", choices = as.numeric(input$start):2021)
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$year, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$year))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("year", "View Reference Year", choices = seq(1985, 2021, by = 1)),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observeEvent(input$start{
updateSelectInput(session, "year", "View Reference Year", choices = as.numeric(input$start):2021)
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$year, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$year))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("year", "View Reference Year", choices = seq(1985, 2021, by = 1)),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observeEvent(input$start{
updateSelectInput(session, "year", "View Reference Year", choices = as.numeric(input$start):2021)
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$year, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$year))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("year", "View Reference Year", choices = seq(1985, 2021, by = 1)),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observeEvent(input$start,{
updateSelectInput(session, "year", "View Reference Year", choices = as.numeric(input$start):2021)
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$year, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$year))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("yr", "View Reference Year", choices = seq(1985, 2021, by = 1)),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observeEvent(input$start,{
updateSelectInput(session, "yr", "View Reference Year", choices = as.numeric(input$start):2021)
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$year, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$yr))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("yr", "View Reference Year", choices = seq(1985, 2021, by = 1)),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
load_rasters(start=as.numeric(input$start), end=2021, data_from = "example")
})
observeEvent(input$start,{
updateSelectInput(session, "yr", "View Reference Year", choices = as.numeric(input$start):2021)
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$yr, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$yr))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI
ui <- fluidPage(
inputPanel(
selectInput("shape", "Choose the cutout shape:",list("circle","square","hexagon")),
sliderInput("start", "Select the study's start year:", min = 1985, max = 2021, value = 1985, step = 1),
sliderInput("size", "Cutout diameter (km)", min = 0.5, max = 5, value = 1, step = 0.1),
selectInput("yr", "View Reference Year", choices = seq(1985, 2021, by = 1)),
actionButton("playButton", "Play")
),
mainPanel(
tabsetPanel(type = "tabs",
#                  tabPanel("Study Area", verbatimTextOutput("preencher")),
tabPanel("Time Series", plotOutput("plot")),
tabPanel("Annual Maps", plotOutput("plot2")),
tabPanel("Data Table", tableOutput("summary"))
)
)
)
# Define server
server <- function(input, output, session) {
recortes <- eventReactive(input$playButton,{
cutout <- make_polygon(lat = -23.602, lon = -48.524, size = as.numeric(input$size), shape = input$shape)
recor <- load_rasters(start=as.numeric(input$start), end = 2021, data_from = "example")
return(recor)
})
observeEvent(input$start,{
updateSelectInput(session, "yr", "View Reference Year", choices = as.numeric(input$start):2021)
})
observeEvent(input$playButton, {
output$summary <- renderTable({
results <- get_area(recortes())
DT::datatable(results$aggregate_data)
})
output$plot <- renderPlot({
results <- get_area(recortes())
p <- results$time_series # assuming this returns a ggplot object
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
observeEvent(input$yr, {
output$plot2 <- renderPlot({
p <- land_vis(recortes(), as.numeric(input$yr))
p <- p + theme(text = element_text(size = 20), # change overall text size
axis.title = element_text(size = 24), # change axis title size
legend.title = element_text(size = 22)) # change legend title size
print(p)
}, height=500 , width=800 ) # end renderPlot
}) # end observeEvent
}
# Run the application
shinyApp(ui = ui, server = server)
