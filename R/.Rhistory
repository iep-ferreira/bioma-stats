knitr::opts_chunk$set(echo = TRUE)
library(dplyr); library(grid); library(ggspatial)
library(rgeos);library(geosphere); library(ggplot2)
library(graphics); library(httr); library(readxl)
library(raster); library(rvest); library(sf)
setwd("C:/Users/ferre/OneDrive/Documentos/Ce-MECA-Pacotes/biomastats")
knitr::opts_chunk$set(echo = TRUE)
# para remover versões anteriores do pacote
remove.packages("biomastats")
# para remover versões anteriores do pacote
#remove.packages("biomastats")
library(devtools)
devtools::install_github("iep-ferreira/biomastats")
library(biomastats)
(path_package <- system.file(package = "biomastats"))
ita_shp <- file.path(path_package, "shp/itapetininga.shp")
recortes <- load_rasters(shape_path = ita_shp, start=1985, end=2021, data_from = "example")
recortes <- load_rasters(shape_path = ita_shp, start=1985, end=2020, data_from = "example")
shape_path <- file.path(sys_path, "shp/polygon.shp")
sys_path <- system.file(package = "biomastats")
ex_a <- file.path(sys_path, "maps-library/frag93.tif")
ex_b <- file.path(sys_path, "maps-library/frag94.tif")
map_a <- raster::raster(ex_a)
map_b <- raster::raster(ex_b)
biome_rasters <- raster::merge(map_a, map_b)
View(biome_rasters)
View(map_a)
View(map_b)
map_a[[1]]
map_a[[2]]
map_a[[1]]
map_a <- terra::rast(ex_a)
map_b <- terra::rast(ex_b)
View(map_a)
View(map_b)
biome_rasters <- terra::merge(map_a, map_b)
teste <- raster::bricks(map_a, map_b)
teste <- raster::brick(map_a, map_b)
teste <- terra::mosaic(map_a, map_b)
teste <- raster::merge(map_a, map_b)
teste <- terra::c(map_a, map_b)
teste <- c(map_a, map_b)
teste <- terra:stack(map_a, map_b)
teste <- terra::rast(c(ex_a, ex_b))
teste <- raster:stack(map_a, map_b)
teste <- raster::stack(map_a, map_b)
biome_rasters[[2]]
!file.exists(fnames)
fnames <- file.path(sys_path, "maps-library/mosaic.tif")
!file.exists(fnames)
writeRaster(biome_rasters, fnames)
fnames <- file.path(sys_path, "maps-library/mosaic.tif")
if (!file.exists(fnames)){
ex_a <- file.path(sys_path, "maps-library/frag93.tif")
ex_b <- file.path(sys_path, "maps-library/frag94.tif")
map_a <- terra::rast(ex_a)
map_b <- terra::rast(ex_b)
biome_rasters <- terra::merge(map_a, map_b)
writeRaster(biome_rasters, fnames)
} else{ biome_rasters <- terra::rast(fnames) }
# para remover versões anteriores do pacote
remove.packages("biomastats")
library(devtools)
devtools::install_github("iep-ferreira/biomastats")
library(biomastats)
library(biomastats)
(path_package <- system.file(package = "biomastats"))
# para remover versões anteriores do pacote
remove.packages("biomastats")
library(biomastats)
(path_package <- system.file(package = "biomastats"))
library(devtools)
devtools::install_github("iep-ferreira/biomastats")
knitr::opts_chunk$set(echo = TRUE)
# para remover versões anteriores do pacote
remove.packages("biomastats")
(path_package <- system.file(package = "biomastats"))
library(devtools)
devtools::install_github("iep-ferreira/biomastats")
library(biomastats)
(path_package <- system.file(package = "biomastats"))
ita_shp <- file.path(path_package, "shp/itapetininga.shp")
recortes <- load_rasters(shape_path = ita_shp, start=1985, end=2020, data_from = "example")
results <- get_area(recortes)
land_vis(recortes, year = 1985)
sys_path <- system.file(package = "biomastats")
fnames <- file.path(sys_path, "maps-library/mosaic.tif")
biome_rasters <- terra::rast(fnames)
sf::st_crs(biome_rasters[[1]])$proj4string
biome_rasters[[1]]
start <- 1985
end <- 2020
maps <- NULL
map <- NULL
# Crop and mask raster data using the shapefile
for (i in start:end) {
maps[[i - (start - 1)]] <- raster::crop(biome_rasters[[i - (start - 1)]], s)
map[[i - (start - 1)]] <- raster::mask(maps[[i - (start - 1)]], s)
}
shape_path <- file.path(sys_path, "shp/polygon.shp")
# Load the shapefile
s <- sf::st_read(shape_path)
s <- sf::st_transform(s, crs=4326)
maps <- NULL
map <- NULL
# Crop and mask raster data using the shapefile
for (i in start:end) {
maps[[i - (start - 1)]] <- raster::crop(biome_rasters[[i - (start - 1)]], s)
map[[i - (start - 1)]] <- raster::mask(maps[[i - (start - 1)]], s)
}
map[[1]]
raster::area(map[[1]])
raster::cellSize(map[[1]])
terra::cellSize(map[[1]])
terra::area(map[[1]])
aux <- terra::rast(fnames)
biome_rasters <- NULL
for(i in start:end){
biome_rasters[[i - (start - 1)]] <- raster::raster(aux[[i - (start - 1)]])
}
area(biome_rasters[[6]])
raster::area(biome_rasters[[6]])
t <- raster::area(biome_rasters[[6]])
t
biome_rasters
biome_rasters[[6]]
raster::getValues(biome_rasters[[6]])
areas_y <- raster::area(biome_rasters[[6]])
v_r <- raster::getValues(biome_rasters[[6]])
areas <- tapply(areas_y, v_r, sum)
areas
areas_y
areas_y$values
values(areas_y)
str(areas_y)
mean(areas_y)
areas_y@data@values
tapply(areas_y@data@values, v_r, sum) == tapply(areas_y, v_r, sum)
# para remover versões anteriores do pacote
remove.packages("biomastats")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
devtools::install_github("iep-ferreira/biomastats")
library(biomastats)
(path_package <- system.file(package = "biomastats"))
ita_shp <- file.path(path_package, "shp/itapetininga.shp")
recortes <- load_rasters(shape_path = ita_shp, start=1985, end=2020, data_from = "example")
results <- get_area(recortes)
results$
```
results$time_series
land_vis(recortes, year = 1985)
land_vis(recortes, year = 200)
land_vis(recortes, year = 2000)
land_vis(recortes, year = 2020)
land_dist(recortes, year = 2020, type = hist)
land_dist(recortes, year = 2020, type = "hist")
land_dist(results, year = 2020, type = "hist")
land_dist(results, year = 2020, type = "barplot")
region <- make_polygon(lat = -23.598, long = -48.529, size = 1.5, shape = "hexagon")
region <- make_polygon(lat = -23.598, lon = -48.529, size = 1.5, shape = "hexagon")
shp_path <- file.path(path_package, "shp/polygon.shp")
library(mapview)
mapview(sf::read_sf(shp_path))
region <- make_polygon(lat = -23.600, lon = -48.529, size = 1.5, shape = "hexagon")
shp_path <- file.path(path_package, "shp/polygon.shp")
library(mapview)
mapview(sf::read_sf(shp_path))
region <- make_polygon(lat = -23.610, lon = -48.529, size = 1.5, shape = "hexagon")
shp_path <- file.path(path_package, "shp/polygon.shp")
library(mapview)
mapview(sf::read_sf(shp_path))
region <- make_polygon(lat = -23.605, lon = -48.529, size = 1.5, shape = "hexagon")
shp_path <- file.path(path_package, "shp/polygon.shp")
library(mapview)
mapview(sf::read_sf(shp_path))
recortes <- load_rasters(shape_path = shp_path, start=1985, end=2021, data_from = "example")
results <- get_area(recortes)
results$time_series
land_vis(recortes, year = 1985)
land_vis(recortes, year = 2000)
land_vis(recortes, year = 2021)
land_vis(recortes, year = 2020)
